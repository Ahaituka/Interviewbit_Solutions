#include <iostream>
#include <vector>
#include <map>


using namespace std;

#define Rep(i, n) for(int i=0;i<n;i++)


int main() {
    //vector<int> A={345550, 795673, 817297, 463389, 310822, 805076, 920925, 817297, 817297, 182709, 436820, 817297, 817297, 817297, 817297, 817297, 817297, 263236, 772190, 585741, 354367, 514928, 903332, 817297, 817297, 222927, 608, 817297, 672384, 817297, 681041, 256380, 805870, 266065, 676851, 817297, 438526, 817297, 880946, 817297, 817297, 817297, 247558, 817297, 817297, 357701, 839408, 817297, 925734, 817297, 817297, 798594, 817297, 817297, 735998, 817297, 817297, 817297, 817297, 322939, 817297, 817297, 817297, 812814, 734999, 817297, 134242, 817297, 118807, 817297, 557107, 156963, 817297, 293811, 817297, 817297, 405032, 89956, 817297, 4995, 48808, 53643, 817297, 345494, 817297, 817297, 817297, 817297, 996030, 73655, 917692, 515770, 917138, 817297, 817297, 817297, 817297, 817297, 238606, 817297, 817297, 876877, 817297, 817297, 817297, 817297, 817297, 817297, 817297, 817297, 759087, 817297, 376711, 817297, 761397, 817297, 288919, 53522, 817297, 412310, 817297, 323156, 530068, 968505, 703653, 238695, 817297, 817297, 145534, 142969, 817297, 568236, 817297, 817297, 547877, 817297, 817297, 817297, 159595, 817297, 547748, 587178, 951289, 829077, 183946, 5238, 525340, 817297, 817297, 817297, 941193, 296599, 817297, 817297, 18742, 259107, 752688, 817297, 817297, 136640, 249438, 817297, 817297, 817297, 817297, 729092, 817297, 526140, 709339, 817297, 346760, 868516, 817297, 488457, 817297, 422269, 690955, 817297, 494990, 817297, 817297, 878670, 152130, 817297, 817297, 817297, 432349, 817297, 817297, 451043, 817297, 606514, 817297, 817297, 425553, 817297, 273500, 104433, 297289, 801636, 817297, 674138, 895444, 817297, 237525, 817297, 274485, 980252, 569478, 537620, 817297, 637787, 994649, 980607, 586599, 817297, 552136, 817297, 987194, 15735, 817297, 817297, 817297, 101278, 817297, 817297, 673307, 231170, 817297, 817297, 817297, 403281, 817297, 576661, 817297, 583692, 817297, 318073, 817297, 817297, 817297, 967815, 401713, 817297, 911162, 817297, 796759, 828982, 817297, 763281, 731769, 100773, 817297, 817297, 371010, 926255, 158962, 817297, 904208, 817297, 235542, 841642, 473435, 817297, 460901, 817297, 782334, 817297, 569957, 728893, 817297, 459182, 817297, 515670, 817297, 381180, 111842, 817297, 641692, 817297, 349796, 817297, 926385, 950051, 932495, 817297, 817297, 760357, 4779, 817297, 817297, 730053, 957368, 736526, 429749, 817297, 817297, 817297, 720715, 817297, 587860, 672037, 470805, 817297, 817297, 817297, 817297, 534528, 107022, 817297, 267143, 817297, 334588, 783229, 817297, 817297, 817297, 711634, 817297, 163881, 15195, 817297, 817297, 929583, 817297, 817297, 817297, 817297, 817297, 817297, 397051, 177103, 817297, 673949, 812868, 107051, 817297, 308762, 817297, 360133, 817297, 457671, 817297, 383996, 817297, 817297, 25696, 105289, 628188, 817297, 817297, 642160, 565455, 817297, 817297, 817297, 767666, 895213, 817297, 817297, 199610, 817297, 817297, 817297, 817297, 149061, 817297, 817297, 870323, 817297, 503489, 155123, 817297, 392196, 539414, 41286, 667807, 232952, 817297, 817297, 30067, 817297, 817297, 50598, 817297, 423805, 817297, 10547, 817297, 202599, 817297, 512840, 930869, 307292, 972247, 817297, 775489, 817297, 817297, 982806, 817297, 590869, 817297, 965214, 817297, 817297, 48707, 911713, 795879, 817297, 817297, 677, 362034, 817297, 785684, 817297, 817297, 109138, 952068, 476727, 817297, 893621, 489639, 817297, 817297, 289458, 538836, 817297, 817297, 653690, 817297, 817297, 817297, 89647, 817297, 241895, 881263, 432297, 817297, 3041, 18206, 817297, 672452, 817297, 817297, 65674, 817297, 817297, 817297, 817297, 233272, 817297, 276552, 619920, 300237, 355936, 817297, 811202, 817297, 817297, 817297, 817297, 192104, 328611, 405959, 518208, 817297, 835763, 610375, 650213, 817297, 627803, 640230, 817297, 12278, 817297, 817297, 121393, 650577, 912274, 225163, 309592, 817297, 817297, 817297, 817297, 817297, 817297, 839132, 482902, 817297, 817297, 817297, 817297, 817297, 817297, 817297, 592996, 817297, 946395, 817297, 817297, 817297, 169558, 382129, 817297, 817297, 968842, 745267, 972617, 446065, 817297, 817297, 817297, 817297, 375463, 817297, 817297, 30169, 844394, 817297, 817297, 827693, 449706, 817297, 817297, 650409, 817297, 817297, 667151, 904686, 817297, 11423, 817297, 342440, 986566, 436543, 817297, 488935, 817297, 61678, 817297, 817297, 159602, 520848, 855240, 817297, 817297, 817297, 438962, 697510, 817297, 375901, 744587, 817297, 817297, 817297, 54845, 817297, 564326, 817297, 9167, 817297, 817297, 550286, 232088, 228587, 817297, 817297, 921560, 446717, 817297, 729103, 376199, 754927, 668547, 804719, 817297, 401162, 817297, 817297, 817297, 930674};
    vector<int> A = {2, 1, 2};
    map<int, int> B;
//    Rep(i,A.size())
//    {
//        int x = count(A.begin(),A.end(),A[i]);
//        B[x]= A[i];
//    }
    // map<int,int> B;
    float t = A.size() / 2;
    Rep(i, A.size()) {
        if (B.find(A[i]) != B.end()) {
            int count = B[A[i]] + 1;
            if (count > t)
                cout << A[i];
            else
                B[A[i]] = count;
        } else
            B[A[i]] = 1;
    }
//    sort(B.begin(),B.end(),);
//    for(auto c :B)
//    {
//        cout<<c.first<<" "<<c.second<<endl;
//
    //    }


    //  auto x = *max_element(B.begin(),B.end());

    // cout<<x.second;
    //   return  x;









}